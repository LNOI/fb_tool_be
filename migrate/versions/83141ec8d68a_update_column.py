"""update column

Revision ID: 83141ec8d68a
Revises: 
Create Date: 2024-10-11 23:42:50.526058

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83141ec8d68a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_facebook',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('link_group', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('privacy', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('members', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_per_day', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_admin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_member', sa.Boolean(), nullable=True),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_sync', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('template_message',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('images', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages_facebook',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('template_id', sa.Uuid(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('images', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('receiver_user_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('receiver_user_profile', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['template_message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_facebook',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('link_images', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('link_post', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('number_of_reaction', sa.Integer(), nullable=True),
    sa.Column('owner_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('owner_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('post_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_sync', sa.DateTime(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group_facebook.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment_facebook',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('images', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sender_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sender_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comment_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_sync', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post_facebook.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_facebook')
    op.drop_table('post_facebook')
    op.drop_table('messages_facebook')
    op.drop_table('user')
    op.drop_table('template_message')
    op.drop_table('group_facebook')
    # ### end Alembic commands ###
